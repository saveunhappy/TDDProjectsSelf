plugins {
    id 'java-library'
    id 'jacoco'
}
group = 'com.geektime.tdd'
version = '1.0-SNAPSHOT'

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/spring/'
    }
    mavenLocal()
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation "org.eclipse.jetty:jetty-server:11.0.9"
    testImplementation "org.eclipse.jetty:jetty-servlet:11.0.9"

//    implementation 'org.eclipse.jetty:jetty-server:11.0.9'
//    implementation 'org.eclipse.jetty:jetty-servlet:11.0.9'
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha7'
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha7'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1.MR'

//    implementation("jakarta.inject:jakarta.inject-api:2.0.1.MR")
//    implementation("jakarta.ws.rs:jakarta.ws.rs-api:3.1.0")
//    implementation("jakarta.servlet:jakarta.servlet-api:5.0.0")

    implementation(project(':diContainer'))
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
test {
    useJUnitPlatform()
    afterTest { descriptor, result ->
        println "\n$descriptor.className [$descriptor.classDisplayName] > $descriptor.name [$descriptor.displayName]: $result.resultType"
    }
}
